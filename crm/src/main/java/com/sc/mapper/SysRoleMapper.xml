<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.sc.mapper.SysRoleMapper" >
  <resultMap id="BaseResultMap" type="com.sc.entity.SysRole" >
    <constructor >
      <idArg column="ROLE_ID" jdbcType="DECIMAL" javaType="java.lang.Long" />
      <arg column="ROLE_NAME" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="ROLE_DESCRIBE" jdbcType="VARCHAR" javaType="java.lang.String" />
      <arg column="SUPER_ROLE_ID" jdbcType="DECIMAL" javaType="java.lang.Long" />
      <arg column="OPERATER_ID" jdbcType="DECIMAL" javaType="java.lang.Long" />
      <arg column="CHANGE_DATE" jdbcType="TIMESTAMP" javaType="java.util.Date" />
    </constructor>
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    ROLE_ID, ROLE_NAME, ROLE_DESCRIBE, SUPER_ROLE_ID, OPERATER_ID, CHANGE_DATE
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.sc.entity.SysRoleExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from SYS_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from SYS_ROLE
    where ROLE_ID = #{roleId,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from SYS_ROLE
    where ROLE_ID = #{roleId,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.sc.entity.SysRoleExample" >
    delete from SYS_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.sc.entity.SysRole" >
    insert into SYS_ROLE (ROLE_ID, ROLE_NAME, ROLE_DESCRIBE, 
      SUPER_ROLE_ID, OPERATER_ID, CHANGE_DATE
      )
    values (#{roleId,jdbcType=DECIMAL}, #{roleName,jdbcType=VARCHAR}, #{roleDescribe,jdbcType=VARCHAR}, 
      #{superRoleId,jdbcType=DECIMAL}, #{operaterId,jdbcType=DECIMAL}, #{changeDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.sc.entity.SysRole" >
    insert into SYS_ROLE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        ROLE_ID,
      </if>
      <if test="roleName != null" >
        ROLE_NAME,
      </if>
      <if test="roleDescribe != null" >
        ROLE_DESCRIBE,
      </if>
      <if test="superRoleId != null" >
        SUPER_ROLE_ID,
      </if>
      <if test="operaterId != null" >
        OPERATER_ID,
      </if>
      <if test="changeDate != null" >
        CHANGE_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="roleId != null" >
        #{roleId,jdbcType=DECIMAL},
      </if>
      <if test="roleName != null" >
        #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescribe != null" >
        #{roleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="superRoleId != null" >
        #{superRoleId,jdbcType=DECIMAL},
      </if>
      <if test="operaterId != null" >
        #{operaterId,jdbcType=DECIMAL},
      </if>
      <if test="changeDate != null" >
        #{changeDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.sc.entity.SysRoleExample" resultType="java.lang.Integer" >
    select count(*) from SYS_ROLE
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update SYS_ROLE
    <set >
      <if test="record.roleId != null" >
        ROLE_ID = #{record.roleId,jdbcType=DECIMAL},
      </if>
      <if test="record.roleName != null" >
        ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      </if>
      <if test="record.roleDescribe != null" >
        ROLE_DESCRIBE = #{record.roleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="record.superRoleId != null" >
        SUPER_ROLE_ID = #{record.superRoleId,jdbcType=DECIMAL},
      </if>
      <if test="record.operaterId != null" >
        OPERATER_ID = #{record.operaterId,jdbcType=DECIMAL},
      </if>
      <if test="record.changeDate != null" >
        CHANGE_DATE = #{record.changeDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update SYS_ROLE
    set ROLE_ID = #{record.roleId,jdbcType=DECIMAL},
      ROLE_NAME = #{record.roleName,jdbcType=VARCHAR},
      ROLE_DESCRIBE = #{record.roleDescribe,jdbcType=VARCHAR},
      SUPER_ROLE_ID = #{record.superRoleId,jdbcType=DECIMAL},
      OPERATER_ID = #{record.operaterId,jdbcType=DECIMAL},
      CHANGE_DATE = #{record.changeDate,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.sc.entity.SysRole" >
    update SYS_ROLE
    <set >
      <if test="roleName != null" >
        ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      </if>
      <if test="roleDescribe != null" >
        ROLE_DESCRIBE = #{roleDescribe,jdbcType=VARCHAR},
      </if>
      <if test="superRoleId != null" >
        SUPER_ROLE_ID = #{superRoleId,jdbcType=DECIMAL},
      </if>
      <if test="operaterId != null" >
        OPERATER_ID = #{operaterId,jdbcType=DECIMAL},
      </if>
      <if test="changeDate != null" >
        CHANGE_DATE = #{changeDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where ROLE_ID = #{roleId,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.sc.entity.SysRole" >
    update SYS_ROLE
    set ROLE_NAME = #{roleName,jdbcType=VARCHAR},
      ROLE_DESCRIBE = #{roleDescribe,jdbcType=VARCHAR},
      SUPER_ROLE_ID = #{superRoleId,jdbcType=DECIMAL},
      OPERATER_ID = #{operaterId,jdbcType=DECIMAL},
      CHANGE_DATE = #{changeDate,jdbcType=TIMESTAMP}
    where ROLE_ID = #{roleId,jdbcType=DECIMAL}
  </update>
  
  <resultMap type="com.sc.entity.SysRole" id="selectMeAndSuperMap" autoMapping="true">
  	<id column="ROLE_ID" property="roleId"/>
  	<association property="sysRole" javaType="com.sc.entity.SysRole">
  		<id column="RID2" property="roleId"/>
  		<result column="RNAME" property="roleName"/>
  		<result column="RDESCRIBE2" property="roleDescribe"/>
  		<result column="SRID" property="superRoleId"/>
  		<result column="OID" property="operaterId"/>
  		<result column="CDATE" property="changeDate"/>
  	</association>
  </resultMap>
  <select id="selectMeAndSuper" resultMap="selectMeAndSuperMap">
	SELECT sr1.*,sr2.ROLE_ID RID2,sr2.ROLE_NAME RNAME,sr2.ROLE_DESCRIBE RDESCRIBE2,
	sr2.SUPER_ROLE_ID SRID,sr2.OPERATER_ID OID,sr2.CHANGE_DATE CDATE
	from SYS_ROLE sr1 LEFT JOIN 
	SYS_ROLE sr2 on sr1.SUPER_ROLE_ID=sr2.ROLE_ID where sr1.ROLE_ID=#{rId}
  </select>
  
  <resultMap type="com.sc.entity.SysRole" id="selectUsersMap" autoMapping="true">
  	<id column="ROLE_ID" property="roleId"/>
  	<collection property="sysUserinfoes" ofType="com.sc.entity.SysUserinfo" autoMapping="true">
  		<id column="EMP_ID" property="empId"/>
  	</collection>
  </resultMap>
  <select id="selectUsers" resultMap="selectUsersMap" parameterType="java.lang.Long" >
  	select SR.*,SURI.* from SYS_ROLE SR 
	LEFT JOIN SYS_USERS_ROLE SUR ON SR.ROLE_ID=SUR.ROLE_ID 
	LEFT JOIN SYS_USERS SU ON SUR.USERS_ID=SU.USERS_ID  
	LEFT JOIN SYS_USERINFO SURI ON SU.EMP_ID=SURI.EMP_ID
	WHERE SR.ROLE_ID=#{rId}
  </select>
  
  <resultMap type="com.sc.entity.SysRole" id="selectUsersAndInfosMap" autoMapping="true">
  	<id column="ROLE_ID" property="roleId"/>
  	<collection property="sysUsers" ofType="com.sc.entity.SysUsers" autoMapping="true">
  		<id column="USERS_ID" property="usersId"/>
  		<association property="sysUserinfo" javaType="com.sc.entity.SysUserinfo" autoMapping="true">
  			<id column="EMP_ID" property="empId"/>
  		</association>
  	</collection>
  </resultMap>
  <select id="selectUsersAndInfos" resultMap="selectUsersAndInfosMap">
  	select SR.*,SU.*,SURI.* from SYS_ROLE SR 
	LEFT JOIN SYS_USERS_ROLE SUR ON SR.ROLE_ID=SUR.ROLE_ID 
	LEFT JOIN SYS_USERS SU ON SUR.USERS_ID=SU.USERS_ID  
	LEFT JOIN SYS_USERINFO SURI ON SU.EMP_ID=SURI.EMP_ID
	WHERE SR.ROLE_ID=#{rId}
  </select>
</mapper>